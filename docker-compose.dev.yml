version: '3.8'

services:
  postgres_db:
    image: postgres:15-alpine
    container_name: test_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-vectordb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2023-09-07T02-05-02Z
    container_name: test_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: test_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped

  milvus_standalone:
    image: milvusdb/milvus:v2.5.12 # Official script uses a newer version
    container_name: milvus_standalone_service # Keeping container name consistent
    security_opt:
      - "seccomp:unconfined" # From official script
    environment:
      ETCD_USE_EMBED: 'true'
      ETCD_DATA_DIR: '/var/lib/milvus/etcd' # From official script
      ETCD_CONFIG_PATH: '/milvus/configs/embedEtcd.yaml' # From official script
      COMMON_STORAGETYPE: 'local' # From official script
    volumes:
      - milvus_data_standalone:/var/lib/milvus # Main data volume (named volume is good practice)
      - ./embedEtcd.yaml:/milvus/configs/embedEtcd.yaml:ro # Mount generated etcd config (read-only)
      - ./user.yaml:/milvus/configs/user.yaml:ro # Mount user config override (read-only)
    ports:
      - "${MILVUS_PORT:-19530}:19530" # Milvus gRPC port
      - "${MILVUS_HTTP_PORT:-9091}:9091" # Milvus HTTP port
      - "2379:2379" # Exposed etcd port from script
    command: ["milvus", "run", "standalone"] # Command from official script
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9091/healthz || exit 1"] # Healthcheck from script
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 90s # Added start_period from script

volumes:
  postgres_data:
  minio_data:
  redis_data:
  milvus_data_standalone: # Volume for Milvus Standalone data

networks:
  app_network:
    driver: bridge
